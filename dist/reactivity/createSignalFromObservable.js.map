{"version":3,"file":"createSignalFromObservable.js","sources":["../../src/lib/reactivity/createSignalFromObservable.ts"],"sourcesContent":["import {Observable, Subscription} from \"rxjs\";\nimport {Accessor, createEffect, createSignal, EffectFunction, getOwner, onCleanup, Signal} from \"solid-js\";\n\nexport type SignalFromObservable<T> = [...Signal<T>, Accessor<Subscription>];\n\ninterface InitialValueOption<T> {\n    value: T;\n}\n\nexport interface Options {\n    onError?: (error: any) => void | any;\n    autoUnsubscribe?: boolean;\n}\n\ninterface CreateSignalFromObservableOption<T> extends Options, Partial<InitialValueOption<T>> {\n}\n\nexport function createSignalFromObservable<T>(observable: Observable<T>, options: InitialValueOption<T> & Options): SignalFromObservable<T>;\n\nexport function createSignalFromObservable<T>(observable: Observable<T>, options?: CreateSignalFromObservableOption<T | undefined>): SignalFromObservable<T | undefined>;\n\nexport function createSignalFromObservable<Next extends Prev, Init = Next, Prev = Next>(memo: EffectFunction<undefined | Observable<Prev>, Observable<Next>>, options: InitialValueOption<Init> & Options): SignalFromObservable<Next>;\n\nexport function createSignalFromObservable<Next extends Prev, Init = Next, Prev = Next>(memo: EffectFunction<undefined | Observable<Prev>, Observable<Next>>, options?: CreateSignalFromObservableOption<Init | undefined>): SignalFromObservable<Next | undefined>;\n\nexport function createSignalFromObservable<T>(observableOrMemo: Observable<T> | EffectFunction<undefined | Observable<T>, Observable<T>>, options?: CreateSignalFromObservableOption<T | undefined>): SignalFromObservable<T | undefined> {\n\n    const [value, setValue] = createSignal<T | undefined>(options?.value);\n    const [subscription, setSubscription] = createSignal<Subscription>(undefined!);\n\n    const subscribe = (o: Observable<T>) => setSubscription(p => {\n        p?.unsubscribe();\n        return o.subscribe({\n            next: (v: T) => setValue(() => v),\n            error: (e: any) => options?.onError?.(e)\n        })\n    })\n\n    if (typeof observableOrMemo === \"function\") {\n        createEffect<Observable<T> | undefined>(prev => {\n            const obs = observableOrMemo(prev);\n            if (obs === prev) {\n                return prev;\n            }\n            subscribe(obs)\n            return obs\n        })\n    } else {\n        subscribe(observableOrMemo)\n    }\n\n    if (getOwner() && options?.autoUnsubscribe !== false) {\n        onCleanup(() => subscription()?.unsubscribe());\n    }\n\n    return [value, setValue, subscription];\n}\n"],"names":["createSignalFromObservable","observableOrMemo","options","value","setValue","createSignal","subscription","setSubscription","subscribe","o","p","v","e","_a","createEffect","prev","obs","getOwner","onCleanup"],"mappings":";AAyBgB,SAAAA,EAA8BC,GAA4FC,GAAgG;AAEtO,QAAM,CAACC,GAAOC,CAAQ,IAAIC,EAA4BH,KAAA,gBAAAA,EAAS,KAAK,GAC9D,CAACI,GAAcC,CAAe,IAAIF,EAA2B,MAAU,GAEvEG,IAAY,CAACC,MAAqBF,EAAgB,CAAKG,OACzDA,KAAA,QAAAA,EAAG,eACID,EAAE,UAAU;AAAA,IACf,MAAM,CAACE,MAASP,EAAS,MAAMO,CAAC;AAAA,IAChC,OAAO,CAACC;;AAAW,cAAAC,IAAAX,KAAA,gBAAAA,EAAS,YAAT,gBAAAW,EAAA,KAAAX,GAAmBU;AAAA;AAAA,EAAC,CAC1C,EACJ;AAEG,SAAA,OAAOX,KAAqB,aAC5Ba,EAAwC,CAAQC,MAAA;AACtC,UAAAC,IAAMf,EAAiBc,CAAI;AACjC,WAAIC,MAAQD,IACDA,KAEXP,EAAUQ,CAAG,GACNA;AAAA,EAAA,CACV,IAEDR,EAAUP,CAAgB,GAG1BgB,EAAS,MAAKf,KAAA,gBAAAA,EAAS,qBAAoB,MAC3CgB,EAAU,MAAM;;AAAA,YAAAL,IAAAP,QAAA,gBAAAO,EAAgB;AAAA,GAAa,GAG1C,CAACV,GAAOC,GAAUE,CAAY;AACzC;"}