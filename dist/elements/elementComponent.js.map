{"version":3,"file":"elementComponent.js","sources":["../../src/lib/elements/elementComponent.tsx"],"sourcesContent":["import type {AssignableType, Type} from \"@co.mmons/js-utils/core\";\nimport {children, Component, ParentProps, sharedConfig, splitProps} from \"solid-js\";\nimport {JSX} from \"solid-js/h/jsx-runtime\";\nimport {Dynamic, getNextElement, spread} from \"solid-js/web\";\nimport {camelPropsToDashedAttrs} from \"./camelPropsToDashedAttrs\";\nimport {CustomElement} from \"./CustomElement\";\nimport {ElementAttrAttributes} from \"./ElementAttrAttributes\";\nimport {ElementEventsProps} from \"./ElementEventsProps\";\nimport {ElementProps} from \"./ElementProps\";\nimport {registerElement} from \"./registerElement\";\n\nexport type ElementComponent<TagName extends string, ElementType extends CustomElement, ComponentProps = any> = Component<ComponentProps & JSX.HTMLAttributes<ElementType> & ElementAttrAttributes> & {\n    tagName: TagName;\n    configure<Props = ComponentProps, Events extends {[P in keyof Events]: Event} = any>(): ElementComponent<TagName, ElementType, Props & ElementEventsProps<ElementType, Events>>;\n}\n\nexport function elementComponent<TagName extends string, ElementType extends CustomElement>(tagName: TagName, elementType: AssignableType<ElementType>): ElementComponent<TagName, ElementType, ElementProps<ElementType>> {\n\n    registerElement(tagName, elementType);\n\n    const extendedType: Type<ElementType> & {__reactive: string[], __noShadow: boolean} = elementType as any;\n\n    const template: Component<any> = (rawProps: ParentProps<any>) => {\n        const rawChildren = children(() => rawProps.children);\n        const [, props, others] = splitProps(rawProps, [\"children\"], extendedType.__reactive ?? []);\n\n        const el = sharedConfig.context ? getNextElement() : document.createElement(tagName);\n\n        spread(el, {\n            ...camelPropsToDashedAttrs(props),\n            ...others,\n            children: (!extendedType.__noShadow && rawChildren) ?? [],\n            \"slotted-children\": (extendedType.__noShadow && rawChildren.toArray()) ?? []\n        }, false, !!extendedType.__noShadow);\n\n        return el;\n    }\n\n    const component = template as any as ElementComponent<TagName, ElementType, ElementProps<ElementType>>;\n    component[\"tagName\"] = tagName;\n    component[\"configure\"] = () => {\n        return component as any;\n    }\n\n    return component as any;\n}\n"],"names":["elementComponent","tagName","elementType","registerElement","extendedType","component","rawProps","rawChildren","children","props","others","splitProps","__reactive","el","sharedConfig","context","getNextElement","document","createElement","spread","camelPropsToDashedAttrs","__noShadow","toArray"],"mappings":";;;;AAgBO,SAASA,EAA4EC,GAAkBC,GAA6G;AAEvNC,EAAAA,EAAgBF,GAASC,CAAW;AAEpC,QAAME,IAAgFF,GAkBhFG,IAhB4BC,CAAAA,MAA+B;AAC7D,UAAMC,IAAcC,EAAS,MAAMF,EAASE,QAAQ,GAC9C,GAAGC,GAAOC,CAAM,IAAIC,EAAWL,GAAU,CAAC,UAAU,GAAGF,EAAaQ,cAAc,CAAE,CAAA,GAEpFC,IAAKC,EAAaC,UAAUC,EAAgB,IAAGC,SAASC,cAAcjB,CAAO;AAEnFkB,WAAAA,EAAON,GAAI;AAAA,MACP,GAAGO,EAAwBX,CAAK;AAAA,MAChC,GAAGC;AAAAA,MACHF,WAAW,CAACJ,EAAaiB,cAAcd,MAAgB,CAAE;AAAA,MACzD,qBAAqBH,EAAaiB,cAAcd,EAAYe,QAAS,MAAK,CAAA;AAAA,IAC7E,GAAE,IAAO,CAAC,CAAClB,EAAaiB,UAAU,GAE5BR;AAAAA;AAIXR,SAAAA,EAAU,UAAaJ,GACvBI,EAAU,YAAe,MACdA,GAGJA;AACX;"}