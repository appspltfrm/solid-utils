{"version":3,"file":"defineElementComponent.js","sources":["../../src/lib/elements/defineElementComponent.tsx"],"sourcesContent":["import {AssignableType, Type} from \"@co.mmons/js-utils/core\";\nimport type {JSX, ParentProps} from \"solid-js\";\nimport {children, Component, createMemo, createRenderEffect, mergeProps, sharedConfig, splitProps} from \"solid-js\";\nimport {getNextElement, spread} from \"solid-js/web\";\nimport {CustomElement} from \"./CustomElement\";\nimport {CustomElementJSXAttributes} from \"./CustomElementJSXAttributes\";\nimport {CustomElementJSXEvents} from \"./CustomElementJSXEvents\";\nimport {CustomElementProps} from \"./CustomElementProps\";\nimport {CustomElementReactiveProp} from \"./CustomElementReactiveProp\";\nimport {registerElement} from \"./registerElement\";\n\ntype DefineElementFn = () => void;\n\nexport type CustomElementComponent<TagName extends string, ElementType extends CustomElement, ComponentProps = CustomElementProps<ElementType>> = Component<ComponentProps & CustomElementJSXAttributes> & {\n    tagName: TagName;\n    register(): void\n}\n\nexport type ElementComponent<TagName extends string, Props, ComponentElement extends HTMLElement> = Component<Partial<Props> & JSX.HTMLAttributes<ComponentElement>> & {tagName: TagName, register: () => void};\n\ntype PropsHandler<P extends {[key: string]: any}> = (props: P) => P;\n\nexport interface ElementComponentOptions {\n    define?: DefineElementFn | DefineElementFn[];\n    initialProps?: {[key: string]: any};\n    propsHandler?: (props: {[key: string]: any}) => void;\n}\n\nexport function defineElementComponent<TagName extends string, ElementType extends CustomElement, Props = CustomElementProps<ElementType>, Events extends {[P in keyof Events]: Event} = any>(tagName: TagName, elementType: AssignableType<ElementType>, props?: Props, events?: Events): CustomElementComponent<TagName, ElementType, Props & CustomElementJSXEvents<ElementType, Events> & Omit<JSX.HTMLAttributes<ElementType>, keyof CustomElementJSXEvents<ElementType, Events>>>;\n\nexport function defineElementComponent<TagName extends string, ComponentElement extends HTMLElement, Props>(tagName: TagName, childrenAllowed: true, options?: ElementComponentOptions): ElementComponent<TagName, Props & ParentProps, ComponentElement>;\n\nexport function defineElementComponent<TagName extends string, ComponentElement extends HTMLElement, Props>(tagName: TagName, childrenAllowed: false, options?: ElementComponentOptions): ElementComponent<TagName, Props, ComponentElement>;\n\nexport function defineElementComponent(tagName: string, elementTypeOrChildrenAllowed: AssignableType | boolean, options?: ElementComponentOptions | any, events?: any): any {\n\n    const solidElementType = typeof elementTypeOrChildrenAllowed !== \"boolean\" && elementTypeOrChildrenAllowed as AssignableType;\n\n    function register() {\n\n        if (customElements.get(tagName)) {\n            return;\n\n        } else if (solidElementType) {\n            registerElement(tagName, solidElementType);\n\n        } else if (options?.define) {\n            for (const d of Array.isArray(options.define) ? options.define : [options.define]) {\n                d();\n            }\n        }\n    }\n\n    let cmp: any;\n\n    if (solidElementType) {\n\n        const extendedType: Type & {reactive: {[propName: string]: boolean | CustomElementReactiveProp}} = solidElementType as any;\n\n        cmp = (rawProps: ParentProps<any>) => {\n            register();\n\n            const rawChildren = children(() => rawProps.children);\n            const [, uncheckedProps] = splitProps(rawProps, [\"children\"]);\n\n            const props = createMemo(() => {\n                const clone = {};\n                const descriptors = Object.getOwnPropertyDescriptors(uncheckedProps);\n                for (const key of Object.keys(descriptors)) {\n                    const fixed = extendedType.reactive?.[key] ? `prop:${key}` : fixPropName(key);\n                    Object.defineProperty(clone, key !== fixed ? fixed : key, descriptors[key]);\n                }\n                return clone;\n            })\n\n            return createMemo(() => {\n                const el: any = sharedConfig.context ? getNextElement() : document.createElement(tagName);\n                const noShadow = (el as any)[\"renderRoot\"] === el;\n                const childrenProp = noShadow ? \"prop:slottedChildren\" : \"children\";\n\n                spread(el, mergeProps(props, {[childrenProp]: rawChildren}), false, false);\n\n                return el;\n            })\n        }\n\n    } else {\n\n        cmp = ((rawProps: any) => {\n\n            register();\n\n            return createMemo(() => {\n\n                const rawChildren = children(() => rawProps.children);\n                const [_, uncheckedProps] = splitProps(rawProps, [\"children\"]);\n\n                const el = sharedConfig.context ? getNextElement() : document.createElement(tagName);\n\n                const props = createMemo(() => {\n                    const clone = {};\n                    const descriptors = Object.getOwnPropertyDescriptors(uncheckedProps);\n                    for (const key of Object.keys(descriptors)) {\n                        const fixed = fixPropName(key);\n                        Object.defineProperty(clone, key !== fixed ? fixed : key, descriptors[key]);\n                    }\n\n                    options?.propsHandler?.(clone);\n\n                    return clone;\n                })\n\n                spread(el, mergeProps(options?.initialProps, props, {children: (elementTypeOrChildrenAllowed && rawChildren) ?? []}), false, !elementTypeOrChildrenAllowed);\n\n                return el;\n            })\n        })\n    }\n\n    cmp[\"tagName\"] = tagName;\n    cmp[\"register\"] = register;\n\n    return cmp;\n}\n\nconst notFixableProps = [\"class\", \"className\", \"classList\", \"ref\", \"style\"];\n\nfunction fixPropName(key: string) {\n\n    if (key.includes(\":\") || key.startsWith(\"on\") || notFixableProps.includes(key)) {\n        return key;\n    } else if (key.includes(\"-\")) {\n        return `attr:${key}`;\n    } else {\n        return `prop:${key}`;\n    }\n}\n"],"names":["defineElementComponent","tagName","elementTypeOrChildrenAllowed","options","events","solidElementType","register","customElements","get","registerElement","define","d","Array","isArray","cmp","extendedType","rawProps","rawChildren","children","uncheckedProps","splitProps","props","createMemo","clone","descriptors","Object","getOwnPropertyDescriptors","key","keys","fixed","reactive","fixPropName","defineProperty","el","sharedConfig","context","getNextElement","document","createElement","childrenProp","spread","mergeProps","_","propsHandler","initialProps","notFixableProps","includes","startsWith"],"mappings":";;;AAkCO,SAASA,EAAuBC,GAAiBC,GAAwDC,GAAyCC,GAAmB;AAExK,QAAMC,IAAmB,OAAOH,KAAiC,aAAaA;AAE9E,WAASI,IAAW;AAEhB,QAAIC,gBAAeC,IAAIP,CAAO;AAGvB,UAAII;AACPI,QAAAA,EAAgBR,GAASI,CAAgB;AAAA,eAElCF,KAAAA,QAAAA,EAASO;AAChB,mBAAWC,KAAKC,MAAMC,QAAQV,EAAQO,MAAM,IAAIP,EAAQO,SAAS,CAACP,EAAQO,MAAM;AAC5EC;;EAGZ;AAEA,MAAIG;AAEJ,MAAIT,GAAkB;AAElB,UAAMU,IAA6FV;AAEnGS,IAAAA,IAAOE,CAAAA,MAA+B;AAClCV,MAAAA;AAEA,YAAMW,IAAcC,EAAS,MAAMF,EAASE,QAAQ,GAC9C,CAAA,EAAGC,CAAc,IAAIC,EAAWJ,GAAU,CAAC,UAAU,CAAC,GAEtDK,IAAQC,EAAW,MAAM;;AAC3B,cAAMC,IAAQ,CAAA,GACRC,IAAcC,OAAOC,0BAA0BP,CAAc;AACnE,mBAAWQ,KAAOF,OAAOG,KAAKJ,CAAW,GAAG;AACxC,gBAAMK,KAAQd,IAAAA,EAAae,aAAbf,QAAAA,EAAwBY,KAAQ,QAAOA,MAAQI,EAAYJ,CAAG;AAC5EF,iBAAOO,eAAeT,GAAOI,MAAQE,IAAQA,IAAQF,GAAKH,EAAYG,CAAG,CAAC;AAAA,QAC9E;AACA,eAAOJ;AAAAA,MACX,CAAC;AAED,aAAOD,EAAW,MAAM;AACpB,cAAMW,IAAUC,EAAaC,UAAUC,EAAgB,IAAGC,SAASC,cAAcrC,CAAO,GAElFsC,IADYN,EAAW,eAAkBA,IACf,yBAAyB;AAEzDO,eAAAA,EAAOP,GAAIQ,EAAWpB,GAAO;AAAA,UAAC,CAACkB,CAAY,GAAGtB;AAAAA,QAAW,CAAC,GAAG,IAAO,EAAK,GAElEgB;AAAAA,MACX,CAAC;AAAA;EAGT;AAEInB,IAAAA,IAAQE,CAAAA,OAEJV,KAEOgB,EAAW,MAAM;AAEpB,YAAML,IAAcC,EAAS,MAAMF,EAASE,QAAQ,GAC9C,CAACwB,GAAGvB,CAAc,IAAIC,EAAWJ,GAAU,CAAC,UAAU,CAAC,GAEvDiB,IAAKC,EAAaC,UAAUC,EAAgB,IAAGC,SAASC,cAAcrC,CAAO,GAE7EoB,IAAQC,EAAW,MAAM;;AAC3B,cAAMC,IAAQ,CAAA,GACRC,IAAcC,OAAOC,0BAA0BP,CAAc;AACnE,mBAAWQ,KAAOF,OAAOG,KAAKJ,CAAW,GAAG;AACxC,gBAAMK,IAAQE,EAAYJ,CAAG;AAC7BF,iBAAOO,eAAeT,GAAOI,MAAQE,IAAQA,IAAQF,GAAKH,EAAYG,CAAG,CAAC;AAAA,QAC9E;AAEAxB,gBAAAA,IAAAA,KAAAA,gBAAAA,EAASwC,iBAATxC,QAAAA,EAAAA,KAAAA,GAAwBoB,IAEjBA;AAAAA,MACX,CAAC;AAEDiB,aAAAA,EAAOP,GAAIQ,EAAWtC,KAAAA,gBAAAA,EAASyC,cAAcvB,GAAO;AAAA,QAACH,WAAWhB,KAAgCe,MAAgB,CAAA;AAAA,MAAE,CAAC,GAAG,IAAO,CAACf,CAA4B,GAEnJ+B;AAAAA,IACX,CAAC;AAITnB,SAAAA,EAAI,UAAab,GACjBa,EAAI,WAAcR,GAEXQ;AACX;AAEA,MAAM+B,IAAkB,CAAC,SAAS,aAAa,aAAa,OAAO,OAAO;AAE1E,SAASd,EAAYJ,GAAa;AAE9B,SAAIA,EAAImB,SAAS,GAAG,KAAKnB,EAAIoB,WAAW,IAAI,KAAKF,EAAgBC,SAASnB,CAAG,IAClEA,IACAA,EAAImB,SAAS,GAAG,IACf,QAAOnB,MAEP,QAAOA;AAEvB;"}