{"version":3,"file":"defineElementComponent.js","sources":["../../src/lib/elements/defineElementComponent.tsx"],"sourcesContent":["import {AssignableType, Type} from \"@co.mmons/js-utils/core\";\nimport type {JSX, ParentProps} from \"solid-js\";\nimport {\n    children,\n    Component,\n    createEffect,\n    createMemo,\n    createRenderEffect,\n    mergeProps,\n    sharedConfig,\n    splitProps\n} from \"solid-js\";\nimport {assign, getNextElement, spread} from \"solid-js/web\";\nimport {ElementAttrAttributes} from \"./ElementAttrAttributes\";\nimport {ElementEventsProps} from \"./ElementEventsProps\";\nimport {ElementProps} from \"./ElementProps\";\nimport {ElementReactiveProp} from \"./ElementReactiveProp\";\nimport {registerElement} from \"./registerElement\";\nimport {SolidElement} from \"./SolidElement\";\n\ntype DefineElementFn = () => void;\n\nexport type ElementComponent<TagName extends string, ElementType extends SolidElement, ComponentProps = any> = Component<ComponentProps & JSX.HTMLAttributes<ElementType> & ElementAttrAttributes> & {\n    tagName: TagName;\n    register(): void\n}\n\nexport type NonSolidElementComponent<TagName extends string, Props, ComponentElement extends HTMLElement> = Component<Partial<Props> & JSX.HTMLAttributes<ComponentElement>> & {tagName: TagName, register: () => void};\n\ntype PropsHandler<P extends {[key: string]: any}> = (props: P) => P;\n\nexport interface NonSolidElementComponentOptions {\n    define?: DefineElementFn | DefineElementFn[];\n    initialProps?: {[key: string]: any};\n    propsHandler?: (props: {[key: string]: any}) => void;\n}\n\nexport function defineElementComponent<TagName extends string, ElementType extends SolidElement, Props = ElementProps<ElementType>, Events extends {[P in keyof Events]: Event} = any>(tagName: TagName, elementType: AssignableType<ElementType>, props?: Props, events?: Events): ElementComponent<TagName, ElementType, Props & ElementEventsProps<ElementType, Events>>;\n\nexport function defineElementComponent<TagName extends string, ComponentElement extends HTMLElement, Props>(tagName: TagName, childrenAllowed: true, options?: NonSolidElementComponentOptions): NonSolidElementComponent<TagName, Props & ParentProps, ComponentElement>;\n\nexport function defineElementComponent<TagName extends string, ComponentElement extends HTMLElement, Props>(tagName: TagName, childrenAllowed: false, options?: NonSolidElementComponentOptions): NonSolidElementComponent<TagName, Props, ComponentElement>;\n\nexport function defineElementComponent(tagName: string, elementTypeOrChildrenAllowed: AssignableType | boolean, options?: NonSolidElementComponentOptions | any, events?: any): any {\n\n    const solidElementType = typeof elementTypeOrChildrenAllowed !== \"boolean\" && elementTypeOrChildrenAllowed as AssignableType;\n\n    function register() {\n\n        if (customElements.get(tagName)) {\n            return;\n\n        } else if (solidElementType) {\n            registerElement(tagName, solidElementType);\n\n        } else if (options?.define) {\n            for (const d of Array.isArray(options.define) ? options.define : [options.define]) {\n                d();\n            }\n        }\n    }\n\n    let cmp: any;\n\n    if (solidElementType) {\n\n        const extendedType: Type & {reactive: {[propName: string]: boolean | ElementReactiveProp}} = solidElementType as any;\n\n        cmp = (rawProps: ParentProps<any>) => {\n            register();\n\n            return () => {\n                const el: any = sharedConfig.context ? getNextElement() : document.createElement(tagName);\n                const noShadow = (el as any)[\"renderRoot\"] === el;\n\n                const rawChildren = children(() => rawProps.children);\n                const [, reactiveProps, others] = splitProps(rawProps, [\"children\"], Object.keys(extendedType.reactive ?? {}));\n\n                createRenderEffect(() => {\n                    const reactiveDescriptors = Object.getOwnPropertyDescriptors(reactiveProps);\n                    for (const key of Object.keys(reactiveDescriptors)) {\n                        const dashed = toDashCase(key);\n                        if (key !== dashed) {\n                            Object.defineProperty(reactiveProps, dashed, reactiveDescriptors[key]);\n                            delete reactiveProps[key];\n                        }\n                    }\n                })\n\n                spread(el, mergeProps(reactiveProps, others, {\n                    children: (!noShadow && rawChildren) ?? [],\n                    \"slotted-children\": (noShadow && rawChildren.toArray()) ?? []}\n                ), false, noShadow);\n\n                // createEffect(() => {\n                //     for (const propName of Object.keys(props)) {\n                //         const niu = props[propName];\n                //         const prev = el[propName];\n                //         if (niu !== prev) {\n                //             el[propName] = niu;\n                //         }\n                //     }\n                // })\n                //\n                // spread(el, mergeProps(others, {\n                //     children: (!noShadow && rawChildren) ?? [],\n                //     \"slotted-children\": (noShadow && rawChildren.toArray()) ?? []\n                // }), false, noShadow);\n\n                return el;\n            }\n        }\n\n    } else {\n\n        cmp = ((rawProps: any) => {\n\n            register();\n\n            return () => {\n\n                const rawChildren = children(() => rawProps.children);\n                const [_, others] = splitProps(rawProps, [\"children\"]);\n\n                const el = sharedConfig.context ? getNextElement() : document.createElement(tagName);\n\n                createRenderEffect(() => {\n                    options?.propsHandler?.(others);\n\n                    const descriptors = Object.getOwnPropertyDescriptors(others);\n                    for (const key of Object.keys(descriptors)) {\n                        const dashed = toDashCase(key);\n                        if (dashed !== key) {\n                            Object.defineProperty(others, dashed, descriptors[key]);\n                            delete others[key];\n                        }\n                    }\n                })\n\n                spread(el, mergeProps(options?.initialProps, others, {children: (elementTypeOrChildrenAllowed && rawChildren) ?? []}), false, !elementTypeOrChildrenAllowed);\n\n                return el;\n            }\n        })\n    }\n\n    cmp[\"tagName\"] = tagName;\n    cmp[\"register\"] = register;\n\n    return cmp;\n}\n\nfunction toDashCase(key: string) {\n\n    if (key.includes(\":\") || key.startsWith(\"on\")) {\n        return key;\n    }\n\n    return key.replace(/\\.?([A-Z]+)/g, (x, y) => \"-\" + y.toLowerCase()).replace(\"_\", \"-\").replace(/^-/, \"\");\n}\n"],"names":["defineElementComponent","tagName","elementTypeOrChildrenAllowed","options","events","solidElementType","register","customElements","get","registerElement","define","d","Array","isArray","cmp","extendedType","rawProps","el","sharedConfig","context","getNextElement","document","createElement","noShadow","rawChildren","children","reactiveProps","others","splitProps","Object","keys","reactive","createRenderEffect","reactiveDescriptors","getOwnPropertyDescriptors","key","dashed","toDashCase","defineProperty","spread","mergeProps","toArray","_","propsHandler","descriptors","initialProps","includes","startsWith","replace","x","y","toLowerCase"],"mappings":";;;AA2CO,SAASA,EAAuBC,GAAiBC,GAAwDC,GAAiDC,GAAmB;AAEhL,QAAMC,IAAmB,OAAOH,KAAiC,aAAaA;AAE9E,WAASI,IAAW;AAEhB,QAAIC,gBAAeC,IAAIP,CAAO;AAGvB,UAAII;AACPI,QAAAA,EAAgBR,GAASI,CAAgB;AAAA,eAElCF,KAAAA,QAAAA,EAASO;AAChB,mBAAWC,KAAKC,MAAMC,QAAQV,EAAQO,MAAM,IAAIP,EAAQO,SAAS,CAACP,EAAQO,MAAM;AAC5EC;;EAGZ;AAEA,MAAIG;AAEJ,MAAIT,GAAkB;AAElB,UAAMU,IAAuFV;AAE7FS,IAAAA,IAAOE,CAAAA,OACHV,KAEO,MAAM;AACT,YAAMW,IAAUC,EAAaC,UAAUC,EAAgB,IAAGC,SAASC,cAAcrB,CAAO,GAClFsB,IAAYN,EAAW,eAAkBA,GAEzCO,IAAcC,EAAS,MAAMT,EAASS,QAAQ,GAC9C,CAAGC,EAAAA,GAAeC,CAAM,IAAIC,EAAWZ,GAAU,CAAC,UAAU,GAAGa,OAAOC,KAAKf,EAAagB,YAAY,CAAA,CAAE,CAAC;AAE7GC,aAAAA,EAAmB,MAAM;AACrB,cAAMC,IAAsBJ,OAAOK,0BAA0BR,CAAa;AAC1E,mBAAWS,KAAON,OAAOC,KAAKG,CAAmB,GAAG;AAChD,gBAAMG,IAASC,EAAWF,CAAG;AAC7B,UAAIA,MAAQC,MACRP,OAAOS,eAAeZ,GAAeU,GAAQH,EAAoBE,CAAG,CAAC,GACrE,OAAOT,EAAcS,CAAG;AAAA,QAEhC;AAAA,MACJ,CAAC,GAEDI,EAAOtB,GAAIuB,EAAWd,GAAeC,GAAQ;AAAA,QACzCF,WAAW,CAACF,KAAYC,MAAgB,CAAE;AAAA,QAC1C,qBAAqBD,KAAYC,EAAYiB,QAAS,MAAK,CAAA;AAAA,MAAE,CAAC,GAC/D,IAAOlB,CAAQ,GAiBXN;AAAAA;EAInB;AAEIH,IAAAA,IAAQE,CAAAA,OAEJV,KAEO,MAAM;AAET,YAAMkB,IAAcC,EAAS,MAAMT,EAASS,QAAQ,GAC9C,CAACiB,GAAGf,CAAM,IAAIC,EAAWZ,GAAU,CAAC,UAAU,CAAC,GAE/CC,IAAKC,EAAaC,UAAUC,EAAgB,IAAGC,SAASC,cAAcrB,CAAO;AAEnF+B,aAAAA,EAAmB,MAAM;;AACrB7B,SAAAA,IAAAA,KAAAA,gBAAAA,EAASwC,iBAATxC,QAAAA,EAAAA,KAAAA,GAAwBwB;AAExB,cAAMiB,IAAcf,OAAOK,0BAA0BP,CAAM;AAC3D,mBAAWQ,KAAON,OAAOC,KAAKc,CAAW,GAAG;AACxC,gBAAMR,IAASC,EAAWF,CAAG;AAC7B,UAAIC,MAAWD,MACXN,OAAOS,eAAeX,GAAQS,GAAQQ,EAAYT,CAAG,CAAC,GACtD,OAAOR,EAAOQ,CAAG;AAAA,QAEzB;AAAA,MACJ,CAAC,GAEDI,EAAOtB,GAAIuB,EAAWrC,KAAAA,gBAAAA,EAAS0C,cAAclB,GAAQ;AAAA,QAACF,WAAWvB,KAAgCsB,MAAgB,CAAA;AAAA,MAAE,CAAC,GAAG,IAAO,CAACtB,CAA4B,GAEpJe;AAAAA;AAKnBH,SAAAA,EAAI,UAAab,GACjBa,EAAI,WAAcR,GAEXQ;AACX;AAEA,SAASuB,EAAWF,GAAa;AAE7B,SAAIA,EAAIW,SAAS,GAAG,KAAKX,EAAIY,WAAW,IAAI,IACjCZ,IAGJA,EAAIa,QAAQ,gBAAgB,CAACC,GAAGC,MAAM,MAAMA,EAAEC,YAAW,CAAE,EAAEH,QAAQ,KAAK,GAAG,EAAEA,QAAQ,MAAM,EAAE;AAC1G;"}