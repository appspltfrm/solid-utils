{"version":3,"file":"defineElementComponent.js","sources":["../../src/lib/elements/defineElementComponent.tsx"],"sourcesContent":["import {AssignableType, Type} from \"@co.mmons/js-utils/core\";\nimport type {JSX, ParentProps} from \"solid-js\";\nimport {children, Component, createMemo, mergeProps, sharedConfig, splitProps} from \"solid-js\";\nimport {getNextElement, spread} from \"solid-js/web\";\nimport {ElementAttrAttributes} from \"./ElementAttrAttributes\";\nimport {ElementEventsProps} from \"./ElementEventsProps\";\nimport {ElementProps} from \"./ElementProps\";\nimport {registerElement} from \"./registerElement\";\nimport {SolidElement} from \"./SolidElement\";\n\ntype DefineElementFn = () => void;\n\nexport type ElementComponent<TagName extends string, ElementType extends SolidElement, ComponentProps = any> = Component<ComponentProps & JSX.HTMLAttributes<ElementType> & ElementAttrAttributes> & {\n    tagName: TagName;\n    register(): void\n}\n\nexport type NonSolidElementComponent<TagName extends string, Props, ComponentElement extends HTMLElement> = Component<Partial<Props> & JSX.HTMLAttributes<ComponentElement>> & {tagName: TagName, register: () => void};\n\ntype PropsHandler<P extends {[key: string]: any}> = (props: P) => P;\n\nexport interface NonSolidElementComponentOptions {\n    define?: DefineElementFn | DefineElementFn[];\n    initialProps?: {[key: string]: any};\n    propsHandler?: (props: {[key: string]: any}) => void;\n}\n\nexport function defineElementComponent<TagName extends string, ElementType extends SolidElement, Props = ElementProps<ElementType>, Events extends {[P in keyof Events]: Event} = any>(tagName: TagName, elementType: AssignableType<ElementType>, props?: Props, events?: Events): ElementComponent<TagName, ElementType, Props & ElementEventsProps<ElementType, Events>>;\n\nexport function defineElementComponent<TagName extends string, Props, ComponentElement extends HTMLElement>(tagName: TagName, childrenAllowed: true, options?: NonSolidElementComponentOptions): NonSolidElementComponent<TagName, Props & ParentProps, ComponentElement>;\n\nexport function defineElementComponent<TagName extends string, Props, ComponentElement extends HTMLElement>(tagName: TagName, childrenAllowed: false, options?: NonSolidElementComponentOptions): NonSolidElementComponent<TagName, Props, ComponentElement>;\n\nexport function defineElementComponent(tagName: string, elementTypeOrChildrenAllowed: AssignableType | boolean, options?: NonSolidElementComponentOptions | any, events?: any): any {\n\n    const solidElementType = typeof elementTypeOrChildrenAllowed !== \"boolean\" && elementTypeOrChildrenAllowed as AssignableType;\n\n    function register() {\n\n        if (customElements.get(tagName)) {\n            return;\n\n        } else if (solidElementType) {\n            registerElement(tagName, solidElementType);\n\n        } else if (options?.define) {\n            for (const d of Array.isArray(options.define) ? options.define : [options.define]) {\n                d();\n            }\n        }\n    }\n\n    let cmp: any;\n\n    if (solidElementType) {\n\n        const extendedType: Type & {reactive: {[propName: string]: boolean}} = solidElementType as any;\n\n        cmp = (rawProps: ParentProps<any>) => {\n            register();\n\n            const el = sharedConfig.context ? getNextElement() : document.createElement(tagName);\n            const noShadow = (el as any)[\"renderRoot\"] === el;\n\n            const rawChildren = children(() => rawProps.children);\n            const [, props, others] = splitProps(rawProps, [\"children\"], Object.keys(extendedType.reactive ?? {}));\n\n            for (const key of Object.keys(props)) {\n                const dashed = key.replace(/\\.?([A-Z]+)/g, (x, y) => \"-\" + y.toLowerCase()).replace(\"_\", \"-\").replace(/^-/, \"\");\n                if (key !== dashed) {\n                    Object.defineProperty(props, dashed, {get: () => props[key]});\n                }\n            }\n\n            const allProps = mergeProps(props, others, {\n                children: (!noShadow && rawChildren) ?? [],\n                \"slotted-children\": (noShadow && rawChildren.toArray()) ?? []\n            })\n\n            spread(el, mergeProps(props, others, {\n                children: (!noShadow && rawChildren) ?? [],\n                \"slotted-children\": (noShadow && rawChildren.toArray()) ?? []}\n            ), false, noShadow);\n\n            return el;\n        }\n\n    } else {\n\n        cmp = ((rawProps: any) => {\n\n            register();\n\n            const [children, others] = splitProps(rawProps, [\"children\"]);\n\n            const el = sharedConfig.context ? getNextElement() : document.createElement(tagName);\n\n            options?.propsHandler(others);\n\n            spread(el, mergeProps(options?.initialProps, others, {children: (elementTypeOrChildrenAllowed && children?.children) ?? []}), false, !elementTypeOrChildrenAllowed);\n\n            return el;\n        })\n    }\n\n    cmp[\"tagName\"] = tagName;\n    cmp[\"register\"] = register;\n\n    return cmp;\n}\n"],"names":["defineElementComponent","tagName","elementTypeOrChildrenAllowed","options","events","solidElementType","register","customElements","get","registerElement","define","d","Array","isArray","cmp","extendedType","rawProps","el","sharedConfig","context","getNextElement","document","createElement","noShadow","rawChildren","children","props","others","splitProps","Object","keys","reactive","key","dashed","replace","x","y","toLowerCase","defineProperty","mergeProps","toArray","spread","propsHandler","initialProps"],"mappings":";;;AAiCO,SAASA,EAAuBC,GAAiBC,GAAwDC,GAAiDC,GAAmB;AAEhL,QAAMC,IAAmB,OAAOH,KAAiC,aAAaA;AAE9E,WAASI,IAAW;AAEhB,QAAIC,gBAAeC,IAAIP,CAAO;AAGvB,UAAII;AACPI,QAAAA,EAAgBR,GAASI,CAAgB;AAAA,eAElCF,KAAAA,QAAAA,EAASO;AAChB,mBAAWC,KAAKC,MAAMC,QAAQV,EAAQO,MAAM,IAAIP,EAAQO,SAAS,CAACP,EAAQO,MAAM;AAC5EC,UAAAA;;EAGZ;AAEA,MAAIG;AAEJ,MAAIT,GAAkB;AAElB,UAAMU,IAAiEV;AAEvES,IAAAA,IAAOE,CAAAA,MAA+B;AAClCV,MAAAA;AAEA,YAAMW,IAAKC,EAAaC,UAAUC,EAAgB,IAAGC,SAASC,cAAcrB,CAAO,GAC7EsB,IAAYN,EAAW,eAAkBA,GAEzCO,IAAcC,EAAS,MAAMT,EAASS,QAAQ,GAC9C,CAAGC,EAAAA,GAAOC,CAAM,IAAIC,EAAWZ,GAAU,CAAC,UAAU,GAAGa,OAAOC,KAAKf,EAAagB,YAAY,CAAA,CAAE,CAAC;AAErG,iBAAWC,KAAOH,OAAOC,KAAKJ,CAAK,GAAG;AAClC,cAAMO,IAASD,EAAIE,QAAQ,gBAAgB,CAACC,GAAGC,MAAM,MAAMA,EAAEC,aAAa,EAAEH,QAAQ,KAAK,GAAG,EAAEA,QAAQ,MAAM,EAAE;AAC9G,QAAIF,MAAQC,KACRJ,OAAOS,eAAeZ,GAAOO,GAAQ;AAAA,UAACzB,KAAK,MAAMkB,EAAMM,CAAG;AAAA,QAAC,CAAC;AAAA,MAEpE;AAEiBO,aAAAA,EAAWb,GAAOC,GAAQ;AAAA,QACvCF,WAAW,CAACF,KAAYC,MAAgB,CAAE;AAAA,QAC1C,qBAAqBD,KAAYC,EAAYgB,QAAS,MAAK,CAAA;AAAA,MAC/D,CAAC,GAEDC,EAAOxB,GAAIsB,EAAWb,GAAOC,GAAQ;AAAA,QACjCF,WAAW,CAACF,KAAYC,MAAgB,CAAE;AAAA,QAC1C,qBAAqBD,KAAYC,EAAYgB,QAAS,MAAK,CAAA;AAAA,MAAE,CAAC,GAC/D,IAAOjB,CAAQ,GAEXN;AAAAA;EAGf;AAEIH,IAAAA,IAAQE,CAAAA,MAAkB;AAEtBV,MAAAA;AAEA,YAAM,CAACmB,GAAUE,CAAM,IAAIC,EAAWZ,GAAU,CAAC,UAAU,CAAC,GAEtDC,IAAKC,EAAaC,UAAUC,EAAgB,IAAGC,SAASC,cAAcrB,CAAO;AAEnFE,aAAAA,KAAAA,QAAAA,EAASuC,aAAaf,IAEtBc,EAAOxB,GAAIsB,EAAWpC,KAAAA,gBAAAA,EAASwC,cAAchB,GAAQ;AAAA,QAACF,WAAWvB,MAAgCuB,KAAAA,gBAAAA,EAAUA,cAAa,CAAA;AAAA,MAAE,CAAC,GAAG,IAAO,CAACvB,CAA4B,GAE3Je;AAAAA;AAIfH,SAAAA,EAAI,UAAab,GACjBa,EAAI,WAAcR,GAEXQ;AACX;"}