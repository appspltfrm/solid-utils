{"version":3,"file":"registerElement.js","sources":["../../src/lib/elements/registerElement.tsx"],"sourcesContent":["import {AssignableType} from \"@co.mmons/js-utils/core\";\nimport {compose, ICustomElement, register} from \"component-register\";\nimport {getCurrentElement, withSolid} from \"solid-element\";\nimport {splitProps} from \"solid-js\";\nimport {SolidElement} from \"./SolidElement\";\n\nexport function registerElement<ElementType extends SolidElement>(tagName: string, elementConstructor: AssignableType<ElementType>) {\n\n    if (customElements.get(tagName)) {\n        return;\n    }\n\n    const extendedConstructor: {reactive: {[propName: string]: boolean}, __shadowStyles: string | string[]} = elementConstructor as any;\n\n    const propsDefinitions: {[propName: string]: {\n            value: undefined;\n            attribute: string;\n            notify: boolean;\n            reflect: boolean;\n            parse: boolean;\n        }} = {slottedChildren: {value: undefined, attribute: \"slotted-children\", notify: false, reflect: false, parse: false}};\n\n    for (const propName of Object.keys(extendedConstructor.reactive ?? {})) {\n        propsDefinitions[propName] = Object.assign({value: undefined, parse: false, reflect: false});\n    }\n\n    const connectedCallback = elementConstructor.prototype.connectedCallback;\n    const disconnectedCallback = elementConstructor.prototype.disconnectedCallback;\n\n    let renderRoot: PropertyDescriptor | undefined;\n\n    let parentClass = elementConstructor;\n    while (parentClass !== HTMLElement) {\n        renderRoot = Object.getOwnPropertyDescriptor(parentClass.prototype, \"renderRoot\");\n        if (renderRoot) {\n            break;\n        }\n        parentClass = Object.getPrototypeOf(parentClass);\n    }\n\n    const finalConstructor = compose(register(tagName, propsDefinitions, {BaseElement: elementConstructor}), withSolid)((rawProps) => {\n\n        const shadowStyles = extendedConstructor.__shadowStyles;\n        const [children, props] = splitProps(rawProps, [\"slottedChildren\"]);\n        const element = getCurrentElement() as any as SolidElement & ICustomElement;\n\n        if (connectedCallback) {\n            connectedCallback.call(element);\n        }\n\n        if (disconnectedCallback) {\n            element.addReleaseCallback(() => disconnectedCallback.call(element));\n        }\n\n        return <>\n            {element.renderRoot === element.shadowRoot && shadowStyles && (typeof shadowStyles === \"string\" ? [shadowStyles] : shadowStyles).map(style => <style>{style}</style>)}\n            {element[\"template\"]({props, children: children.slottedChildren ?? []})}\n        </>\n    });\n\n    if (renderRoot?.get) {\n        Object.defineProperty(finalConstructor.prototype, \"renderRoot\", {\n            get() {\n                const root = renderRoot?.get?.call(this);\n                if (root) {\n                    return root;\n                } else {\n                    const shadow = (this as HTMLElement).shadowRoot;\n                    if (!shadow) {\n                        return (this as HTMLElement).attachShadow({mode: \"open\"});\n                    }\n                }\n            }\n        })\n    }\n}\n"],"names":["registerElement","tagName","elementConstructor","customElements","get","extendedConstructor","propsDefinitions","slottedChildren","value","undefined","attribute","notify","reflect","parse","propName","Object","keys","reactive","assign","connectedCallback","prototype","disconnectedCallback","renderRoot","parentClass","HTMLElement","getOwnPropertyDescriptor","getPrototypeOf","finalConstructor","compose","register","BaseElement","withSolid","rawProps","shadowStyles","__shadowStyles","children","props","splitProps","element","getCurrentElement","call","addReleaseCallback","_$memo","shadowRoot","_c$","map","style","_el$","_tmpl$","_$insert","defineProperty","root","attachShadow","mode"],"mappings":";;;;;AAMO,SAASA,EAAkDC,GAAiBC,GAAiD;AAEhI,MAAIC,eAAeC,IAAIH,CAAO;AAC1B;AAGJ,QAAMI,IAAoGH,GAEpGI,IAMG;AAAA,IAACC,iBAAiB;AAAA,MAACC,OAAOC;AAAAA,MAAWC,WAAW;AAAA,MAAoBC,QAAQ;AAAA,MAAOC,SAAS;AAAA,MAAOC,OAAO;AAAA,IAAK;AAAA;AAExH,aAAWC,KAAYC,OAAOC,KAAKX,EAAoBY,YAAY,CAAA,CAAE;AACjEX,IAAAA,EAAiBQ,CAAQ,IAAIC,OAAOG,OAAO;AAAA,MAACV,OAAOC;AAAAA,MAAWI,OAAO;AAAA,MAAOD,SAAS;AAAA,IAAK,CAAC;AAG/F,QAAMO,IAAoBjB,EAAmBkB,UAAUD,mBACjDE,IAAuBnB,EAAmBkB,UAAUC;AAE1D,MAAIC,GAEAC,IAAcrB;AAClB,SAAOqB,MAAgBC,gBACnBF,IAAaP,OAAOU,yBAAyBF,EAAYH,WAAW,YAAY,GAC5EE,CAAAA;AAGJC,IAAAA,IAAcR,OAAOW,eAAeH,CAAW;AAGnD,QAAMI,IAAmBC,EAAQC,EAAS5B,GAASK,GAAkB;AAAA,IAACwB,aAAa5B;AAAAA,EAAkB,CAAC,GAAG6B,CAAS,EAAGC,CAAAA,MAAa;AAE9H,UAAMC,IAAe5B,EAAoB6B,gBACnC,CAACC,GAAUC,CAAK,IAAIC,EAAWL,GAAU,CAAC,iBAAiB,CAAC,GAC5DM,IAAUC;AAEhB,WAAIpB,KACAA,EAAkBqB,KAAKF,CAAO,GAG9BjB,KACAiB,EAAQG,mBAAmB,MAAMpB,EAAqBmB,KAAKF,CAAO,CAAC,GAGvE,CAAAI,GAAA,MAAA;AAAA,YACKJ,IAAAA,EAAAA,MAAAA,CAAAA,EAAAA,EAAQhB,eAAegB,EAAQK,cAAcV,EAAY;AAAA,aAAA,MAAzDW,EAA6D,MAAC,OAAOX,KAAiB,WAAW,CAACA,CAAY,IAAIA,GAAcY,IAAIC,CAAAA,OAAK,MAAA;AAAA,cAAAC,IAAAC,EAAA,UAAA,EAAA;AAAAC,eAAAA,EAAAF,GAAYD,CAAK,GAAAC;AAAA,MAAA,GAAA,CAAS;AAAA,IAAC,GAAA,CAAA,GAAAL,EAAA,MACpKJ,EAAQ,SAAY;AAAA,MAACF,OAAAA;AAAAA,MAAOD,UAAUA,EAAS5B,mBAAmB,CAAA;AAAA,IAAG,CAAA,CAAC,CAAA;AAAA,EAE/E,CAAC;AAED,EAAIe,KAAAA,QAAAA,EAAYlB,OACZW,OAAOmC,eAAevB,EAAiBP,WAAW,cAAc;AAAA,IAC5DhB,MAAM;;AACF,YAAM+C,KAAO7B,IAAAA,KAAAA,gBAAAA,EAAYlB,QAAZkB,gBAAAA,EAAiBkB,KAAK;AACnC,UAAIW;AACA,eAAOA;AAGP,UAAI,CADY,KAAqBR;AAEjC,eAAQ,KAAqBS,aAAa;AAAA,UAACC,MAAM;AAAA,QAAM,CAAC;AAAA,IAGpE;AAAA,EACJ,CAAC;AAET;"}