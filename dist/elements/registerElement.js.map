{"version":3,"file":"registerElement.js","sources":["../../src/lib/elements/registerElement.tsx"],"sourcesContent":["import {AssignableType} from \"@co.mmons/js-utils/core\";\nimport {compose, ICustomElement, noShadowDOM, register} from \"component-register\";\nimport {getCurrentElement, withSolid} from \"solid-element\";\nimport {splitProps} from \"solid-js\";\nimport {CustomElement} from \"./CustomElement\";\n\nexport function registerElement<ElementType extends CustomElement>(tagName: string, elementConstructor: AssignableType<ElementType>) {\n\n    if (customElements.get(tagName)) {\n        return;\n    }\n\n    const extendedConstructor: {__reactive: string[], __noShadow: boolean, __shadowStyles: string | string[]} = elementConstructor as any;\n\n    const propsDefinitions: {[propName: string]: {\n            value: undefined;\n            attribute: string;\n            notify: boolean;\n            reflect: boolean;\n            parse: boolean;\n        }} = {__children: undefined as any};\n\n    for (const prop of extendedConstructor.__reactive ?? []) {\n        propsDefinitions[prop] = Object.assign({value: undefined});\n    }\n\n    const connectedCallback = elementConstructor.prototype.connectedCallback;\n    const disconnectedCallback = elementConstructor.prototype.disconnectedCallback;\n\n    const finalConstructor = compose(register(tagName, propsDefinitions, {BaseElement: elementConstructor}), withSolid)((rawProps) => {\n\n        const shadow = !extendedConstructor.__noShadow;\n        const shadowStyles = shadow && extendedConstructor.__shadowStyles;\n\n        if (!shadow) {\n            noShadowDOM();\n        }\n\n        const [children, props] = splitProps(rawProps, [\"__children\"]);\n        const element = getCurrentElement() as any as CustomElement & ICustomElement;\n\n        if (connectedCallback) {\n            connectedCallback.call(element);\n        }\n\n        if (disconnectedCallback) {\n            element.addReleaseCallback(() => disconnectedCallback.call(element));\n        }\n\n        return <>\n            {shadowStyles && (typeof shadowStyles === \"string\" ? [shadowStyles] : shadowStyles).map(style => <style>{style}</style>)}\n            {element[\"template\"]({props, children: children?.[\"__children\"] ?? []})}\n        </>\n    });\n}\n"],"names":["registerElement","tagName","elementConstructor","customElements","get","extendedConstructor","propsDefinitions","__children","undefined","prop","__reactive","Object","assign","value","connectedCallback","prototype","disconnectedCallback","compose","register","BaseElement","withSolid","rawProps","shadow","__noShadow","shadowStyles","__shadowStyles","noShadowDOM","children","props","splitProps","element","getCurrentElement","call","addReleaseCallback","_$memo","map","style","_el$","_tmpl$","_$insert"],"mappings":";;;;;AAMO,SAASA,EAAmDC,GAAiBC,GAAiD;AAEjI,MAAIC,eAAeC,IAAIH,CAAO;AAC1B;AAGJ,QAAMI,IAAsGH,GAEtGI,IAMG;AAAA,IAACC,YAAYC;AAAAA;AAEtB,aAAWC,KAAQJ,EAAoBK,cAAc,CAAA;AACjDJ,IAAAA,EAAiBG,CAAI,IAAIE,OAAOC,OAAO;AAAA,MAACC,OAAOL;AAAAA,IAAS,CAAC;AAG7D,QAAMM,IAAoBZ,EAAmBa,UAAUD,mBACjDE,IAAuBd,EAAmBa,UAAUC;AAEjCC,EAAAA,EAAQC,EAASjB,GAASK,GAAkB;AAAA,IAACa,aAAajB;AAAAA,EAAkB,CAAC,GAAGkB,CAAS,EAAGC,CAAAA,MAAa;AAE9H,UAAMC,IAAS,CAACjB,EAAoBkB,YAC9BC,IAAeF,KAAUjB,EAAoBoB;AAEnD,IAAKH,KACDI;AAGJ,UAAM,CAACC,GAAUC,CAAK,IAAIC,EAAWR,GAAU,CAAC,YAAY,CAAC,GACvDS,IAAUC;AAEhB,WAAIjB,KACAA,EAAkBkB,KAAKF,CAAO,GAG9Bd,KACAc,EAAQG,mBAAmB,MAAMjB,EAAqBgB,KAAKF,CAAO,CAAC,GAGvE,CAAAI,EAAA,MACKV,MAAiB,OAAOA,KAAiB,WAAW,CAACA,CAAY,IAAIA,GAAcW,IAAIC,CAAAA,OAAK,MAAA;AAAA,YAAAC,IAAAC,EAAA,UAAA,EAAA;AAAAC,aAAAA,EAAAF,GAAYD,CAAK,GAAAC;AAAA,IAAA,GAAA,CAAS,CAAC,GACvHP,EAAAA,MAAAA,EAAQ,SAAY;AAAA,MAACF,OAAAA;AAAAA,MAAOD,WAAUA,KAAAA,gBAAAA,EAAW,eAAiB,CAAA;AAAA,IAAG,CAAA,CAAC,CAAA;AAAA,EAE/E,CAAC;AACL;"}