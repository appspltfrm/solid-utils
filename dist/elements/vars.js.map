{"version":3,"file":"vars.js","sources":["../../src/lib/elements/vars.ts"],"sourcesContent":["import {createMemo, createSignal, Signal} from \"solid-js\";\nimport {createStore, Store} from \"solid-js/store\";\nimport {Accessor, EffectFunction, Memo, MemoOptions, NoInfer} from \"solid-js/types/reactive/signal\";\nimport {Observer, Unsubscribable} from \"type-fest\";\nimport {CustomElement} from \"./CustomElement\";\n\ntype Vars = {[key: string | symbol]: any};\ntype VarName = string | symbol;\n\nexport interface ObservableLike<ValueType = unknown> {\n    subscribe(observer?: Partial<Observer<ValueType>>): Unsubscribable;\n}\n\nconst allVars = new WeakMap<CustomElement, Vars>()\n\nclass VarValue {\n    value: any;\n    onDelete?: () => void;\n}\n\nfunction assertNotExists(vars: Vars | undefined, name: VarName) {\n    if (vars && name in vars) {\n        throw new Error(`Element var ${String(name)} already exists`);\n    }\n}\n\nfunction assertExists(vars: Vars | undefined, name: VarName) {\n    if (vars && !(name in vars)) {\n        throw new Error(`Element var ${String(name)} not exists`);\n    }\n}\n\nexport function getElementVar<T>(element: CustomElement, name: VarName): T | undefined {\n    const v = allVars.get(element)?.[name];\n    if (v instanceof VarValue) {\n        return v.value;\n    } else {\n        return v;\n    }\n}\n\nexport function setElementVar(element: CustomElement, name: VarName, value: any, options?: {onDelete?: (() => any | void)}) {\n\n    let vars = allVars.get(element);\n    if (!vars) {\n        vars = {};\n        allVars.set(element, vars);\n\n        element.addDisconnectedCallback(() => {\n\n            const vars = allVars.get(element);\n            if (vars) {\n                for (const v of Object.values(vars)) {\n                    if (v instanceof VarValue) {\n                        v.onDelete?.();\n                    }\n                }\n            }\n\n            allVars.delete(element)\n        });\n    }\n\n    let varValue = value;\n    if (options?.onDelete) {\n        varValue = new VarValue();\n        varValue.value = value;\n        varValue.onDelete = options.onDelete;\n    }\n\n    vars[name] = varValue;\n}\n\nexport function deleteElementVar<T>(element: CustomElement, name: VarName): T | undefined {\n    const vars = allVars.get(element);\n    if (vars) {\n\n        let v = vars[name];\n        if (v instanceof VarValue) {\n            v.onDelete?.();\n            v = v.value;\n        }\n\n        delete vars[name];\n        return v;\n    }\n}\n\nexport function createElementMemo<Next extends Prev, Prev = Next>(element: CustomElement, name: VarName, fn: EffectFunction<undefined | NoInfer<Prev>, Next>): Accessor<Next>;\nexport function createElementMemo<Next extends Prev, Init = Next, Prev = Next>(element: CustomElement, name: VarName, fn: EffectFunction<Init | Prev, Next>, value: Init, options?: MemoOptions<Next>): Accessor<Next>;\n\nexport function createElementMemo<Next extends Prev, Init = Next, Prev = Next>(element: CustomElement, name: VarName, fn?: any, value?: Init, options?: MemoOptions<Next>): Accessor<Next> {\n\n    const vars = allVars.get(element);\n    assertNotExists(vars, name);\n\n    const memo = createMemo<Next, Init, Prev>(fn, value!, options);\n\n    setElementVar(element, name, memo);\n\n    return memo;\n}\n\nexport function useElementMemo<T = any>(element: CustomElement, name: VarName): Accessor<T> {\n\n    const vars = allVars.get(element);\n    assertExists(vars, name)\n\n    let value = vars![name];\n    if (value instanceof VarValue) {\n        value = value.value;\n    }\n\n    const memo = value as Accessor<T>;\n    if (typeof memo === \"function\") {\n        return memo;\n    }\n\n    return () => {\n        throw new Error(`Element var ${String(name)} is not a memo`);\n    }\n}\n\nexport function getElementMemo<T = any>(element: CustomElement, name: VarName): T {\n\n    let value = allVars.get(element)?.[name];\n    if (value instanceof VarValue) {\n        value = value.value;\n    }\n\n    const memo = value as Accessor<T>;\n    if (typeof memo === \"function\") {\n        return memo();\n    }\n\n    throw new Error(`Element var ${String(name)} is not a memo`);\n}\n\nexport function createElementSignal<T = any>(element: CustomElement, name: VarName, value?: T) {\n\n    const vars = allVars.get(element);\n    assertNotExists(vars, name);\n\n    const signal = createSignal(value);\n\n    setElementVar(element, name, signal);\n\n    return signal;\n}\n\nexport function useElementSignal<T = any>(element: CustomElement, name: VarName): Signal<T | undefined> {\n\n    let value = allVars.get(element)?.[name];\n    if (value instanceof VarValue) {\n        value = value.value;\n    }\n\n    let signal = value as Signal<T | undefined>;\n    if (!signal) {\n        signal = createElementSignal<T>(element, name);\n    }\n\n    return signal;\n}\n\nexport function getElementSignal<T = any>(element: CustomElement, name: VarName): T | undefined {\n\n    let value = allVars.get(element)?.[name];\n    if (value instanceof VarValue) {\n        value = value.value;\n    }\n\n    let signal = value as Signal<T | undefined>;\n    if (!signal) {\n        signal = createElementSignal(element, name);\n    }\n\n    return signal[0]();\n}\n\nexport function setElementSignal<T = any>(element: CustomElement, name: VarName, value: (prev: T | undefined) => T) {\n\n    let current = allVars.get(element)?.[name];\n    if (current instanceof VarValue) {\n        current = current.value;\n    }\n\n    let signal = current as Signal<T | undefined>;\n    if (!signal) {\n        signal = createElementSignal(element, name);\n    }\n\n    signal[1](value);\n}\n\nexport function deleteElementSignal(element: CustomElement, name: VarName) {\n    deleteElementVar(element, name);\n}\n\nexport function loadElementSignal<T = any>(element: CustomElement, name: VarName, observable: ObservableLike<T>, options?: {onError?: (error: any) => void}) {\n\n    const vars = allVars.get(element);\n    assertNotExists(vars, name);\n\n    const signal = createSignal<T>();\n\n    const unsub = observable.subscribe({\n        next: (data) => signal[1](() => data),\n        error: (error) => {\n            if (options?.onError) {\n                options.onError(error);\n            } else {\n                throw error;\n            }\n        }\n    })\n\n    setElementVar(element, name, signal, {onDelete: (\"unsubscribe\" in unsub ? unsub.unsubscribe : unsub)});\n\n    return signal[0];\n}\n\nexport function deleteElementStore(element: CustomElement, name: VarName) {\n    deleteElementVar(element, name);\n}\n\nexport function useElementStore<S extends {[key: string]: any}>(element: CustomElement, name: VarName): ReturnType<typeof createStore<S>> {\n\n    let value = allVars.get(element)?.[name];\n    if (value instanceof VarValue) {\n        value = value.value;\n    }\n\n    const store = value as ReturnType<typeof createStore<S>>;\n    if (store && Array.isArray(store)) {\n        return store;\n    } else {\n        return [\n            undefined as unknown as S,\n            (v: any) => {\n                const [, setStore] = createElementStore(element, name);\n                return setStore(v);\n            }\n        ] as ReturnType<typeof createStore<S>>;\n    }\n}\n\nexport function setElementStore<S extends {[key: string]: any}>(element: CustomElement, name: VarName, newValue: S){\n\n    let value = allVars.get(element)?.[name];\n    if (value instanceof VarValue) {\n        value = value.value;\n    }\n\n    const store = value as ReturnType<typeof createStore<S>>;\n    if (store && Array.isArray(store)) {\n        return store[1](newValue);\n    } else {\n        createElementStore(element, name, newValue);\n    }\n}\n\nexport function getElementStore<S extends {[key: string]: any}>(element: CustomElement, name: VarName): Store<S> {\n\n    let value = allVars.get(element)?.[name];\n    if (value instanceof VarValue) {\n        value = value.value;\n    }\n\n    const store = value as ReturnType<typeof createStore<S>>;\n    if (store && Array.isArray(store)) {\n        return store[0];\n    } else {\n        return undefined as unknown as Store<S>;\n    }\n}\n\nexport function createElementStore<S extends {[key: string]: any}>(element: CustomElement, name: VarName, value?: S) {\n\n    const vars = allVars.get(element);\n    assertNotExists(vars, name);\n\n    const store = createStore(value);\n\n    setElementVar(element, name, store);\n\n    return store;\n}\n\nexport function loadElementStore<S extends {[key: string]: any}>(element: CustomElement, name: VarName, value: ObservableLike<S>, options?: {onError?: (error: any) => void}) {\n\n    const vars = allVars.get(element);\n    assertNotExists(vars, name);\n\n    const store = createStore<S>({} as any);\n\n    const unsub = value.subscribe({\n        next: (data) => store[1](data),\n        error: (error) => {\n            if (options?.onError) {\n                options.onError(error);\n            } else {\n                throw error;\n            }\n        }\n    })\n\n    setElementVar(element, name, store, {onDelete: (\"unsubscribe\" in unsub ? unsub.unsubscribe : unsub)});\n\n    return store[0];\n}\n"],"names":["allVars","VarValue","__publicField","assertNotExists","vars","name","assertExists","getElementVar","element","v","_a","setElementVar","value","options","varValue","deleteElementVar","createElementMemo","fn","memo","createMemo","useElementMemo","getElementMemo","createElementSignal","signal","createSignal","useElementSignal","getElementSignal","setElementSignal","current","deleteElementSignal","loadElementSignal","observable","unsub","data","error","deleteElementStore","useElementStore","store","setStore","createElementStore","setElementStore","newValue","getElementStore","createStore","loadElementStore"],"mappings":"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"}