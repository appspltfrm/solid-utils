{"version":3,"file":"vars.js","sources":["../../src/lib/elements/vars.ts"],"sourcesContent":["import {Accessor, createSignal, Signal} from \"solid-js\";\nimport {createStore} from \"solid-js/store\";\nimport {SolidElement} from \"./SolidElement\";\n\ntype Vars = {[key: string | symbol]: any};\ntype VarName = string | symbol;\ntype Observable<T> = {\n    subscribe: (fn: (v: T) => void) => (() => void) | {\n        unsubscribe: () => void;\n    }\n}\n\nconst allVars = new WeakMap<SolidElement, Vars>()\n\nfunction assertNotExists(vars: Vars | undefined, name: VarName) {\n    if (vars && name in vars) {\n        throw new Error(`Element var ${String(name)} already exists`);\n    }\n}\n\nexport function getElementVar<T>(element: SolidElement, name: VarName): T {\n    return allVars.get(element)?.[name];\n}\n\nexport function setElementVar(element: SolidElement, name: VarName, value: any) {\n\n    let vars = allVars.get(element);\n    if (!vars) {\n        vars = {};\n        allVars.set(element, vars);\n        element.addDisconnectedCallback(() => allVars.delete(element));\n    }\n\n    vars[name] = value;\n\n    return vars[name];\n}\n\nexport function deleteElementVar(element: SolidElement, name: VarName) {\n    const vars = allVars.get(element);\n    if (vars) {\n        delete vars[name];\n    }\n}\n\nexport function createElementSignal<T = any>(element: SolidElement, name: VarName, value?: T) {\n\n    const vars = allVars.get(element);\n    assertNotExists(vars, name);\n\n    const signal = createSignal(value);\n\n    setElementVar(element, name, signal);\n\n    return signal;\n}\n\nexport function getElementSignal<T = any>(element: SolidElement, name: VarName): Accessor<T> | undefined {\n    const signal = allVars.get(element)?.[name] as Signal<T>;\n    if (signal && Array.isArray(signal)) {\n        return signal[0];\n    } else if (signal && typeof signal === \"function\") {\n        return signal;\n    }\n}\n\nexport function setElementSignal<T = any>(element: SolidElement, name: VarName, value: (prev: T) => T) {\n    let signal = allVars.get(element)?.[name] as Signal<T>;\n\n    if (!signal) {\n        createElementSignal(element, name, value);\n    } else if (Array.isArray(signal)) {\n        signal[1](value);\n    }\n}\n\nexport function deleteElementSignal(element: SolidElement, name: VarName) {\n    deleteElementVar(element, name);\n}\n\nexport function loadElementSignal<T = any>(element: SolidElement, name: VarName, observable: Observable<T>) {\n\n    const vars = allVars.get(element);\n    assertNotExists(vars, name);\n\n    const signal = createSignal<T>();\n\n    const unsub = observable.subscribe(data => signal[1](() => data));\n    element.addDisconnectedCallback(() => (\"unsubscribe\" in unsub ? unsub.unsubscribe() : unsub()));\n\n    setElementVar(element, name, signal);\n\n    return signal[0];\n}\n\nexport function deleteElementStore(element: SolidElement, name: VarName) {\n    deleteElementVar(element, name);\n}\n\nexport function createElementStore<T extends string, V>(element: SolidElement, name: VarName, value?: Record<T, V>) {\n\n    const vars = allVars.get(element);\n    assertNotExists(vars, name);\n\n    const store = createStore(value);\n\n    setElementVar(element, name, store);\n\n    return store;\n}\n\nexport function loadElementStore<T extends string, V>(element: SolidElement, name: VarName, value: Observable<Record<T, V>>) {\n\n    const vars = allVars.get(element);\n    assertNotExists(vars, name);\n\n    const store = createStore<Record<T, V>>({} as any);\n\n    const unsub = value.subscribe(data => store[1](data));\n\n    setElementVar(element, name, store);\n\n    element.addDisconnectedCallback(() => (\"unsubscribe\" in unsub ? unsub.unsubscribe() : unsub()));\n\n    return store[0];\n}\n"],"names":["allVars","assertNotExists","vars","name","getElementVar","element","_a","setElementVar","value","deleteElementVar","createElementSignal","signal","createSignal","getElementSignal","setElementSignal","deleteElementSignal","loadElementSignal","observable","unsub","data","deleteElementStore","createElementStore","store","createStore","loadElementStore"],"mappings":"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"}