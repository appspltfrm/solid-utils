{"version":3,"file":"vars.js","sources":["../../src/lib/elements/vars.ts"],"sourcesContent":["import {Accessor, createSignal, Signal} from \"solid-js\";\nimport {createStore, Store} from \"solid-js/store\";\nimport {SolidElement} from \"./SolidElement\";\n\ntype Vars = {[key: string | symbol]: any};\ntype VarName = string | symbol;\ntype Observable<T> = {\n    subscribe: (fn: (v: T) => void) => (() => void) | {\n        unsubscribe: () => void;\n    }\n}\n\nconst allVars = new WeakMap<SolidElement, Vars>()\n\nclass VarValue {\n    value: any;\n    onDelete?: () => void;\n}\n\nfunction assertNotExists(vars: Vars | undefined, name: VarName) {\n    if (vars && name in vars) {\n        throw new Error(`Element var ${String(name)} already exists`);\n    }\n}\n\nexport function getElementVar<T>(element: SolidElement, name: VarName): T {\n    const v = allVars.get(element)?.[name];\n    if (v instanceof VarValue) {\n        return v.value;\n    } else {\n        return v;\n    }\n}\n\nexport function setElementVar(element: SolidElement, name: VarName, value: any, options?: {onDelete?: (() => any | void)}) {\n\n    let vars = allVars.get(element);\n    if (!vars) {\n        vars = {};\n        allVars.set(element, vars);\n\n        element.addDisconnectedCallback(() => {\n\n            const vars = allVars.get(element);\n            if (vars) {\n                for (const v of Object.values(vars)) {\n                    if (v instanceof VarValue) {\n                        v.onDelete?.();\n                    }\n                }\n            }\n\n            allVars.delete(element)\n        });\n    }\n\n    let varValue = value;\n    if (options?.onDelete) {\n        varValue = new VarValue();\n        varValue.value = value;\n        varValue.onDelete = options.onDelete;\n    }\n\n    vars[name] = varValue;\n}\n\nexport function deleteElementVar(element: SolidElement, name: VarName) {\n    const vars = allVars.get(element);\n    if (vars) {\n\n        const v = vars[name];\n        if (v instanceof VarValue) {\n            v.onDelete?.();\n        }\n\n        delete vars[name];\n    }\n}\n\nexport function createElementSignal<T = any>(element: SolidElement, name: VarName, value?: T) {\n\n    const vars = allVars.get(element);\n    assertNotExists(vars, name);\n\n    const signal = createSignal(value);\n\n    setElementVar(element, name, signal);\n\n    return signal;\n}\n\nexport function getElementSignal<T = any>(element: SolidElement, name: VarName): Signal<T> {\n\n    let value = allVars.get(element)?.[name];\n    if (value instanceof VarValue) {\n        value = value.value;\n    }\n\n    const signal = value as Signal<T>;\n    if (signal && Array.isArray(signal)) {\n        return signal;\n    } else {\n        return [() => undefined as T, (v) => {\n            const [, setSignal] = createElementSignal(element, name);\n            return setSignal(v);\n        }] as Signal<T>;\n    }\n}\n\nexport function useElementSignal<T = any>(element: SolidElement, name: VarName): Accessor<T> {\n\n    let value = allVars.get(element)?.[name];\n    if (value instanceof VarValue) {\n        value = value.value;\n    }\n\n    const signal = value as Signal<T>;\n    if (signal && Array.isArray(signal)) {\n        return signal[0];\n    } else {\n        return () => undefined as unknown as T;\n    }\n}\n\nexport function setElementSignal<T = any>(element: SolidElement, name: VarName, value: (prev: T) => T) {\n\n    let current = allVars.get(element)?.[name];\n    if (current instanceof VarValue) {\n        current = current.value;\n    }\n\n    let signal = current as Signal<T>;\n\n    if (!signal) {\n        createElementSignal(element, name, value);\n    } else if (Array.isArray(signal)) {\n        signal[1](value);\n    }\n}\n\nexport function deleteElementSignal(element: SolidElement, name: VarName) {\n    deleteElementVar(element, name);\n}\n\nexport function loadElementSignal<T = any>(element: SolidElement, name: VarName, observable: Observable<T>) {\n\n    const vars = allVars.get(element);\n    assertNotExists(vars, name);\n\n    const signal = createSignal<T>();\n\n    const unsub = observable.subscribe(data => signal[1](() => data));\n    setElementVar(element, name, signal, {onDelete: (\"unsubscribe\" in unsub ? unsub.unsubscribe : unsub)});\n\n    return signal[0];\n}\n\nexport function deleteElementStore(element: SolidElement, name: VarName) {\n    deleteElementVar(element, name);\n}\n\nexport function getElementStore<S extends {[key: string]: any}>(element: SolidElement, name: VarName): ReturnType<typeof createStore<S>> {\n\n    let value = allVars.get(element)?.[name];\n    if (value instanceof VarValue) {\n        value = value.value;\n    }\n\n    const store = value as ReturnType<typeof createStore<S>>;\n    if (store && Array.isArray(store)) {\n        return store;\n    } else {\n        return [\n            undefined as unknown as S,\n            (v: any) => {\n                const [, setStore] = createElementStore(element, name);\n                return setStore(v);\n            }\n        ] as ReturnType<typeof createStore<S>>;\n    }\n}\n\nexport function setElementStore<S extends {[key: string]: any}>(element: SolidElement, name: VarName, newValue: S){\n\n    let value = allVars.get(element)?.[name];\n    if (value instanceof VarValue) {\n        value = value.value;\n    }\n\n    const store = value as ReturnType<typeof createStore<S>>;\n    if (store && Array.isArray(store)) {\n        return store[1](newValue);\n    } else {\n        createElementStore(element, name, newValue);\n    }\n}\n\nexport function useElementStore<S extends {[key: string]: any}>(element: SolidElement, name: VarName): Store<S> {\n\n    let value = allVars.get(element)?.[name];\n    if (value instanceof VarValue) {\n        value = value.value;\n    }\n\n    const store = value as ReturnType<typeof createStore<S>>;\n    if (store && Array.isArray(store)) {\n        return store[0];\n    } else {\n        return undefined as unknown as Store<S>;\n    }\n}\n\nexport function createElementStore<S extends {[key: string]: any}>(element: SolidElement, name: VarName, value?: S) {\n\n    const vars = allVars.get(element);\n    assertNotExists(vars, name);\n\n    const store = createStore(value);\n\n    setElementVar(element, name, store);\n\n    return store;\n}\n\nexport function loadElementStore<S extends {[key: string]: any}>(element: SolidElement, name: VarName, value: Observable<S>) {\n\n    const vars = allVars.get(element);\n    assertNotExists(vars, name);\n\n    const store = createStore<S>({} as any);\n\n    const unsub = value.subscribe(data => store[1](data));\n    setElementVar(element, name, store, {onDelete: (\"unsubscribe\" in unsub ? unsub.unsubscribe : unsub)});\n\n    return store[0];\n}\n"],"names":["allVars","VarValue","__publicField","assertNotExists","vars","name","getElementVar","element","v","_a","setElementVar","value","options","varValue","deleteElementVar","createElementSignal","signal","createSignal","getElementSignal","setSignal","useElementSignal","setElementSignal","current","deleteElementSignal","loadElementSignal","observable","unsub","data","deleteElementStore","getElementStore","store","setStore","createElementStore","setElementStore","newValue","useElementStore","createStore","loadElementStore"],"mappings":"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"}